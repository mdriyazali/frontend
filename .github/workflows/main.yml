name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [14, 16]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Build frontend application
        run: npm run build
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ${var.frontend_build_dir}

  deploy-to-s3:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event.type == 'push' && github.base_branch == 'main'
    environment: prod
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1  # Update with your region
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan (Dry Run)
        run: terraform plan
      - name: Terraform Apply (on Manual Approval)
        run: terraform apply -auto-approve

  tag-and-release:
    runs-on: ubuntu-latest
    needs: deploy-to-s3  # Only run after successful deployment
    if: github.event.type == 'push' && github.base_branch == 'main'
    steps:
      - uses: actions/checkout@v3
      - name: Get latest tag version
        id: get_latest_tag
